/*
 * 版权所有（c）<2021><蔡永程>
 *
 * 反996许可证版本1.0
 *
 * 在符合下列条件的情况下，特此免费向任何得到本授权作品的副本（包括源代码、文件和/或相关内容，以
 * 下统称为“授权作品”）的个人和法人实体授权：被授权个人或法人实体有权以任何目的处置授权作品，包括
 * 但不限于使用、复制，修改，衍生利用、散布，发布和再许可：
 *
 * 1. 个人或法人实体必须在许可作品的每个再散布或衍生副本上包含以上版权声明和本许可证，不得自行修
 * 改。
 * 2. 个人或法人实体必须严格遵守与个人实际所在地或个人出生地或归化地、或法人实体注册地或经营地（
 * 以较严格者为准）的司法管辖区所有适用的与劳动和就业相关法律、法规、规则和标准。如果该司法管辖区
 * 没有此类法律、法规、规章和标准或其法律、法规、规章和标准不可执行，则个人或法人实体必须遵守国际
 * 劳工标准的核心公约。
 * 3. 个人或法人不得以任何方式诱导、暗示或强迫其全职或兼职员工或其独立承包人以口头或书面形式同意
 * 直接或间接限制、削弱或放弃其所拥有的，受相关与劳动和就业有关的法律、法规、规则和标准保护的权利
 * 或补救措施，无论该等书面或口头协议是否被该司法管辖区的法律所承认，该等个人或法人实体也不得以任
 * 何方法限制其雇员或独立承包人向版权持有人或监督许可证合规情况的有关当局报告或投诉上述违反许可证
 * 的行为的权利。
 *
 * 该授权作品是"按原样"提供，不做任何明示或暗示的保证，包括但不限于对适销性、特定用途适用性和非侵
 * 权性的保证。在任何情况下，无论是在合同诉讼、侵权诉讼或其他诉讼中，版权持有人均不承担因本软件或
 * 本软件的使用或其他交易而产生、引起或与之相关的任何索赔、损害或其他责任。
 */

package letcode.normal.medium;

import java.util.Arrays;

/**
 * 一个班级里有n个学生，编号为 0到 n - 1。每个学生会依次回答问题，编号为 0的学生先回答，然后是编号为 1的学生，
 * 以此类推，直到编号为 n - 1的学生，然后老师会重复这个过程，重新从编号为 0的学生开始回答问题。
 * 给你一个长度为 n且下标从 0开始的整数数组chalk和一个整数k。一开始粉笔盒里总共有k支粉笔。当编号为i的学生回答问题时，他会消耗 chalk[i]支粉笔。
 * 如果剩余粉笔数量 严格小于chalk[i]，那么学生 i需要 补充粉笔。
 * 请你返回需要 补充粉笔的学生 编号。
 * 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/find-the-student-that-will-replace-the-chalk 著作权归领扣网络所有。
 * 商业转载请联系官方授权，非商业转载请注明出处。
 *
 * @author CaiYongcheng
 * @since 2021-09-10 09:00
 **/
public class _1894 {


    public int chalkReplacer(int[] chalk, int k) {
        /**
         * 扣去前n轮需要消耗的 粉笔数量
         * 此时到第n+1轮时，剩余的粉笔数量不够这一轮。
         * 此时一个个判断即可。
         */
        int chalkCount = 0;
        int sum = 0;
        for (int count : chalk) {
            chalkCount += count;
        }
        k %= chalkCount;
        for (int i = 0; i < chalk.length; i++) {
            if (k < chalk[i]) {
                return i;
            }
            k -= chalk[i];
        }
        return 0;
    }


    /**
     * 示例 1：
     * 输入：chalk = [5,1,5], k = 22
     * 输出：0
     * 解释：学生消耗粉笔情况如下：
     * - 编号为 0 的学生使用 5 支粉笔，然后 k = 17 。
     * - 编号为 1 的学生使用 1 支粉笔，然后 k = 16 。
     * - 编号为 2 的学生使用 5 支粉笔，然后 k = 11 。
     * - 编号为 0 的学生使用 5 支粉笔，然后 k = 6 。
     * - 编号为 1 的学生使用 1 支粉笔，然后 k = 5 。
     * - 编号为 2 的学生使用 5 支粉笔，然后 k = 0 。
     * 编号为 0 的学生没有足够的粉笔，所以他需要补充粉笔。
     * <p>
     * 示例 2：
     * 输入：chalk = [3,4,1,2], k = 25
     * 输出：1
     * 解释：学生消耗粉笔情况如下：
     * - 编号为 0 的学生使用 3 支粉笔，然后 k = 22 。
     * - 编号为 1 的学生使用 4 支粉笔，然后 k = 18 。
     * - 编号为 2 的学生使用 1 支粉笔，然后 k = 17 。
     * - 编号为 3 的学生使用 2 支粉笔，然后 k = 15 。
     * - 编号为 0 的学生使用 3 支粉笔，然后 k = 12 。
     * - 编号为 1 的学生使用 4 支粉笔，然后 k = 8 。
     * - 编号为 2 的学生使用 1 支粉笔，然后 k = 7 。
     * - 编号为 3 的学生使用 2 支粉笔，然后 k = 5 。
     * - 编号为 0 的学生使用 3 支粉笔，然后 k = 2 。
     * 编号为 1 的学生没有足够的粉笔，所以他需要补充粉笔。
     * <p>
     * 来源：力扣（LeetCode）
     * 链接：https://leetcode-cn.com/problems/find-the-student-that-will-replace-the-chalk
     * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
     *
     * @param args
     */
    public static void main(String[] args) {
        System.out.println(new _1894().chalkReplacer(
                new int[]{5, 1, 5},
                22
        ));
    }

}
