/*
 * 版权所有（c）<2021><蔡永程>
 *
 * 反996许可证版本1.0
 *
 * 在符合下列条件的情况下，特此免费向任何得到本授权作品的副本（包括源代码、文件和/或相关内容，以
 * 下统称为“授权作品”）的个人和法人实体授权：被授权个人或法人实体有权以任何目的处置授权作品，包括
 * 但不限于使用、复制，修改，衍生利用、散布，发布和再许可：
 *
 * 1. 个人或法人实体必须在许可作品的每个再散布或衍生副本上包含以上版权声明和本许可证，不得自行修
 * 改。
 * 2. 个人或法人实体必须严格遵守与个人实际所在地或个人出生地或归化地、或法人实体注册地或经营地（
 * 以较严格者为准）的司法管辖区所有适用的与劳动和就业相关法律、法规、规则和标准。如果该司法管辖区
 * 没有此类法律、法规、规章和标准或其法律、法规、规章和标准不可执行，则个人或法人实体必须遵守国际
 * 劳工标准的核心公约。
 * 3. 个人或法人不得以任何方式诱导、暗示或强迫其全职或兼职员工或其独立承包人以口头或书面形式同意
 * 直接或间接限制、削弱或放弃其所拥有的，受相关与劳动和就业有关的法律、法规、规则和标准保护的权利
 * 或补救措施，无论该等书面或口头协议是否被该司法管辖区的法律所承认，该等个人或法人实体也不得以任
 * 何方法限制其雇员或独立承包人向版权持有人或监督许可证合规情况的有关当局报告或投诉上述违反许可证
 * 的行为的权利。
 *
 * 该授权作品是"按原样"提供，不做任何明示或暗示的保证，包括但不限于对适销性、特定用途适用性和非侵
 * 权性的保证。在任何情况下，无论是在合同诉讼、侵权诉讼或其他诉讼中，版权持有人均不承担因本软件或
 * 本软件的使用或其他交易而产生、引起或与之相关的任何索赔、损害或其他责任。
 */

package letcode.normal.medium;

import java.util.Arrays;

/**
 * 最初记事本上只有一个字符 'A' 。你每次可以对这个记事本进行两种操作：
 * Copy All（复制全部）：复制这个记事本中的所有字符（不允许仅复制部分字符）。
 * Paste（粘贴）：粘贴 上一次 复制的字符。 给你一个数字n ，你需要使用最少的操作次数，在记事本上输出 恰好n个 'A'
 * 。返回能够打印出n个 'A' 的最少操作次数。
 * 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/2-keys-keyboard 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 *
 * @author CaiYongcheng
 * @since 2021-09-19 00:15
 **/
public class _659 {

    public int minSteps(int n) {
        /*
         * 很容易往 分治去想，也就是每次都*2
         * 但是题目要求  Copy All（复制全部）：复制这个记事本中的所有字符（不允许仅复制部分字符）。
         * 所以这种做法不符合要求
         * n个字符，假设最后由s个字符复制p次组成，那么 n = （s）p, 而s由可以由别的字符复制p1次而成
         * 依次类推。等价于将n分解质因数。
         * 用欧拉筛求出1-1000的质数
         */
        int ans = 0;
        int[] primes = new int[1001];
        Arrays.fill(primes, 1);
        for (int index = 2; index < primes.length; index++) {
            if (primes[index] == 0) {
                continue;
            }
            for (int multiple = 2; index * multiple <= 1000; ++multiple) {
                primes[multiple * index] = 0;
            }
        }
        for (int index = 2; index < primes.length; index++) {
            if (primes[index] != 0) {
                while (n % index == 0) {
                    ans += index;
                    n /= index;
                }
                if (n == 1) {
                    break;
                }
            }
        }
        return ans;
    }

    /**
     * 示例 1：
     * 输入：3
     * 输出：3
     * 解释：
     * 最初, 只有一个字符 'A'。
     * 第 1 步, 使用 Copy All 操作。
     * 第 2 步, 使用 Paste 操作来获得 'AA'。
     * 第 3 步, 使用 Paste 操作来获得 'AAA'。
     * <p>
     * 示例 2：
     * 输入：n = 1
     * 输出：0
     * <p>
     * 来源：力扣（LeetCode）
     * 链接：https://leetcode-cn.com/problems/2-keys-keyboard
     * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
     *
     * @param args
     */
    public static void main(String[] args) {
        System.out.println(new _659().minSteps(
                333
        ));
    }

}
